/* /assets/style.css */

/* Basic reset and mobile setup */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

html, body {
    width: 100%;
    height: 100%;
    overflow: hidden;
    background-color: #0a0a2a;
    color: #f0f8ff;
    font-family: Arial, sans-serif;
}

/* --- Particle Canvas Background (NEW) --- */
#particle-canvas {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1; /* Sits behind everything */
    background: linear-gradient(135deg, #0f172a 0%, #312e81 100%);
}

#game-screen {
    position: relative;
    width: 100%;
    height: 100%;
}

.game-view {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 1rem;
}

.hidden {
    display: none;
}

/* Ensure any view with .hidden truly disappears, regardless of other display rules */
.game-view.hidden { display: none !important; }

/* --- Main Menu View (NEW) --- */
#menu-view {
    /* Containerless look; background styled via menu.css grid effects */
    background: transparent;
}

.menu-container {
    text-align: center;
}

.game-title { display: none; }

.logline { display: none; }

.neon-button {
    /* Style from neocitydev.html */
    background: linear-gradient(90deg, #e811ff, #9333ea);
    color: white;
    font-weight: bold;
    padding: 0.8rem 2rem;
    border-radius: 50px;
    transition: all 0.3s ease;
    border: 2px solid transparent;
    box-shadow: 0 0 10px #e811ff, 0 0 20px #9333ea;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-size: 1rem;
    cursor: pointer;
}

.neon-button:hover {
    transform: translateY(-3px) scale(1.05);
    box-shadow: 0 0 15px #e811ff, 0 0 30px #9333ea;
}


/* --- World View --- */
#world-canvas {
    width: 100%;
    height: 100%;
    background-color: transparent; /* Make it transparent */
}

/* --- Dialogue View --- */
#dialogue-view {
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(0,0,0,0.4);
    backdrop-filter: blur(4px);
}

/* Ensure hidden reliably hides the dialogue overlay despite ID rule specificity */
#dialogue-view.hidden { display: none !important; }

#dialogue-view .dialogue-box {
    width: min(95%, 1100px);
    min-height: 320px;
    background: linear-gradient(135deg, rgba(10, 10, 30, 0.95) 0%, rgba(25, 10, 40, 0.92) 100%);
    border: 3px solid rgba(0,255,255,0.4);
    box-shadow: 
        0 0 50px rgba(0, 255, 255, 0.3),
        0 0 100px rgba(138, 43, 226, 0.2),
        inset 0 0 30px rgba(0, 255, 255, 0.05);
    display: grid;
    grid-template-columns: 280px 1fr;
    gap: 24px;
    padding: 24px;
    border-radius: 8px;
    position: relative;
    overflow: hidden;
}

/* Corner accents for dialogue box */
#dialogue-view .dialogue-box::after {
    content: '';
    position: absolute;
    inset: 0;
    border: 1px solid rgba(0, 255, 255, 0.15);
    border-radius: 8px;
    pointer-events: none;
    background: 
        linear-gradient(90deg, rgba(0,255,255,0.3) 0%, transparent 20%) top left,
        linear-gradient(90deg, transparent 80%, rgba(0,255,255,0.3) 100%) top right,
        linear-gradient(90deg, rgba(0,255,255,0.3) 0%, transparent 20%) bottom left,
        linear-gradient(90deg, transparent 80%, rgba(0,255,255,0.3) 100%) bottom right;
    background-size: 60px 2px, 60px 2px, 60px 2px, 60px 2px;
    background-repeat: no-repeat;
    background-position: top left, top right, bottom left, bottom right;
}

#dialogue-view .character-portrait img {
    width: 100%;
    height: auto;
    max-height: 535px; /* Synthya sprite height spec: 362px x 535px */
    object-fit: contain;
    filter: drop-shadow(0 4px 14px rgba(0,0,0,0.6));
    image-rendering: crisp-edges;
    image-rendering: -moz-crisp-edges;
    image-rendering: -webkit-optimize-contrast;
}

#dialogue-view .dialogue-content {
    display: flex;
    flex-direction: column;
}

#dialogue-view .character-name {
    font-size: 26px;
    font-weight: 700;
    color: #00ffff;
    margin-bottom: 10px;
    text-transform: uppercase;
    letter-spacing: 2px;
    text-shadow: 
        0 0 10px rgba(0, 255, 255, 0.8),
        0 0 20px rgba(0, 255, 255, 0.4),
        2px 2px 4px rgba(0, 0, 0, 0.8);
    position: relative;
}

#dialogue-view .character-name::after {
    content: '';
    position: absolute;
    bottom: -4px;
    left: 0;
    width: 60px;
    height: 2px;
    background: linear-gradient(90deg, #00ffff 0%, transparent 100%);
    box-shadow: 0 0 8px rgba(0, 255, 255, 0.6);
}

#dialogue-view .dialogue-text {
    font-size: 20px;
    line-height: 1.8;
    color: #e6faff;
    min-height: 140px;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.6);
    letter-spacing: 0.3px;
    font-weight: 400;
}

#dialogue-view .dialogue-choices {
    margin-top: 16px;
    display: flex;
    gap: 12px;
    flex-wrap: wrap;
}

#dialogue-view .dialogue-choices .choice-btn {
    background: linear-gradient(135deg, rgba(0,255,255,0.1) 0%, rgba(138,43,226,0.1) 100%);
    border: 2px solid #00ffff;
    color: #00ffff;
    padding: 12px 24px;
    font-size: 16px;
    font-weight: 600;
    letter-spacing: 1.5px;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    text-transform: uppercase;
    border-radius: 4px;
}

#dialogue-view .dialogue-choices .choice-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(0,255,255,0.3), transparent);
    transition: left 0.5s ease;
}

#dialogue-view .dialogue-choices .choice-btn:hover::before {
    left: 100%;
}

#dialogue-view .dialogue-choices .choice-btn:hover {
    background: linear-gradient(135deg, rgba(0,255,255,0.3) 0%, rgba(138,43,226,0.3) 100%);
    color: #fff;
    border-color: #00ffff;
    box-shadow: 
        0 0 20px rgba(0,255,255,0.6),
        0 0 40px rgba(0,255,255,0.3),
        inset 0 0 20px rgba(0,255,255,0.1);
    transform: translateY(-2px);
}

#dialogue-view .dialogue-choices .choice-btn:active {
    transform: translateY(0);
    box-shadow: 
        0 0 10px rgba(0,255,255,0.4),
        inset 0 0 10px rgba(0,255,255,0.2);
}

/* Dialogue effects - Enhanced for Phase 1 */
#dialogue-view.effect-flash::after {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(circle at center, rgba(255,255,255,0.9), rgba(138,43,226,0.4));
    animation: flashFade 0.5s ease;
    pointer-events: none;
}

@keyframes flashFade {
    0% { opacity: 1; }
    50% { opacity: 0.7; }
    100% { opacity: 0; }
}

#dialogue-view.effect-glitch .dialogue-box {
    animation: glitchShift 0.8s steps(8, end);
}

@keyframes glitchShift {
    0% { transform: translate(0,0); filter: hue-rotate(0deg) saturate(1); }
    10% { transform: translate(-5px, 2px); filter: hue-rotate(90deg) saturate(2); }
    20% { transform: translate(5px, -3px); filter: hue-rotate(-90deg) saturate(1.5); }
    30% { transform: translate(-3px, 3px); filter: hue-rotate(45deg) saturate(2.5); }
    40% { transform: translate(4px, -2px); filter: hue-rotate(-45deg) saturate(1.8); }
    50% { transform: translate(-2px, 4px); filter: hue-rotate(120deg) saturate(2.2); }
    60% { transform: translate(3px, -4px); filter: hue-rotate(-120deg) saturate(1.6); }
    80% { transform: translate(-4px, 1px); filter: hue-rotate(30deg) saturate(1.3); }
    100% { transform: translate(0,0); filter: hue-rotate(0deg) saturate(1); }
}

/* Add RGB split effect for glitch */
#dialogue-view.effect-glitch .dialogue-box::before {
    content: '';
    position: absolute;
    inset: 0;
    background: inherit;
    opacity: 0.8;
    animation: rgbSplit 0.8s steps(4, end);
    mix-blend-mode: screen;
    pointer-events: none;
}

@keyframes rgbSplit {
    0% { transform: translate(0,0); filter: hue-rotate(0deg); }
    25% { transform: translate(3px, 0); filter: hue-rotate(180deg); }
    50% { transform: translate(-3px, 0); filter: hue-rotate(90deg); }
    75% { transform: translate(0, 3px); filter: hue-rotate(270deg); }
    100% { transform: translate(0,0); filter: hue-rotate(0deg); }
}

#dialogue-view.effect-scan::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(to bottom, rgba(0,255,255,0) 0%, rgba(0,255,255,0.25) 48%, rgba(255,255,255,0.4) 50%, rgba(0,255,255,0.25) 52%, rgba(0,255,255,0) 100%);
    background-size: 100% 30px;
    animation: scanlineMove 2s linear infinite;
    pointer-events: none;
}

@keyframes scanlineMove {
    0% { background-position-y: -30px; }
    100% { background-position-y: calc(100% + 30px); }
}

/* Static noise overlay for scan effect */
#dialogue-view.effect-scan::after {
    content: '';
    position: absolute;
    inset: 0;
    background-image: 
        repeating-linear-gradient(0deg, rgba(0,0,0,0.15) 0px, transparent 1px, transparent 2px, rgba(0,0,0,0.15) 3px),
        repeating-linear-gradient(90deg, rgba(0,0,0,0.15) 0px, transparent 1px, transparent 2px, rgba(0,0,0,0.15) 3px);
    opacity: 0.3;
    animation: staticNoise 0.1s steps(10) infinite;
    pointer-events: none;
}

@keyframes staticNoise {
    0% { transform: translate(0, 0); }
    10% { transform: translate(-1px, 1px); }
    20% { transform: translate(1px, -1px); }
    30% { transform: translate(-1px, -1px); }
    40% { transform: translate(1px, 1px); }
    50% { transform: translate(0, -1px); }
    60% { transform: translate(-1px, 0); }
    70% { transform: translate(1px, 0); }
    80% { transform: translate(0, 1px); }
    90% { transform: translate(-1px, -1px); }
    100% { transform: translate(1px, 1px); }
}

/* Any generic overlay honoring the hidden class */
.overlay.hidden { display: none !important; }

/* --- Minigames UI --- */
.minigame-container { margin-top: 12px; }
.simon-grid {
    display: grid;
    grid-template-columns: repeat(2, 120px);
    grid-template-rows: repeat(2, 120px);
    gap: 14px;
    justify-content: center;
    margin: 16px auto;
}
.simon-pad {
    width: 120px; height: 120px; border-radius: 14px; border: 2px solid rgba(255,255,255,0.2);
    background: color-mix(in srgb, var(--pad-color, #00ffff) 65%, #000 35%);
    box-shadow: 0 0 14px rgba(0,0,0,0.4), inset 0 0 8px rgba(255,255,255,0.08);
    color: #0a0a0a; font-weight: 700; font-size: 20px;
    cursor: pointer; transition: transform 0.05s ease, filter 0.1s ease;
}
.simon-pad.active { filter: brightness(1.6) saturate(1.2); transform: scale(1.03); }
.simon-controls { display:flex; gap:12px; align-items:center; justify-content:center; }

.pipe-grid {
    --size: 3;
    display: grid; grid-template-columns: repeat(var(--size), 88px); grid-template-rows: repeat(var(--size), 88px);
    gap: 10px; justify-content: center; margin: 16px auto;
}
.pipe-cell {
    width: 88px; height: 88px; border-radius: 10px; border: 2px solid rgba(0,255,255,0.3);
    background: radial-gradient(100% 100% at 50% 0%, rgba(0,255,255,0.08), rgba(0,0,0,0.6));
    position: relative; cursor: pointer; box-shadow: inset 0 0 18px rgba(0,255,255,0.12);
}
.pipe-cell::before, .pipe-cell::after {
    content: '';
    position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%);
    width: 16px; height: 16px; background: #00ffff; border-radius: 4px; box-shadow: 0 0 10px #00ffff;
}
.pipe-cell::before { display: none; }
.pipe-cell::after { display: none; }
/* Draw pipe arms via shadows */
.pipe-cell { --n:0; --e:0; --s:0; --w:0; }
.pipe-cell { box-shadow: inset 0 0 18px rgba(0,255,255,0.12); }
.pipe-cell .arm { display:none; }
/* Use gradients to draw arms visually */
.pipe-cell {
    background:
        linear-gradient(to bottom, transparent calc(50% - 8px), #00ffff calc(50% - 8px), #00ffff calc(50% + 8px), transparent calc(50% + 8px)) center/0 0 no-repeat,
        linear-gradient(to right,  transparent calc(50% - 8px), #00ffff calc(50% - 8px), #00ffff calc(50% + 8px), transparent calc(50% + 8px)) center/0 0 no-repeat,
        radial-gradient(circle at center, rgba(0,255,255,0.9) 0 8px, transparent 9px);
}
/* Expand gradients based on directional flags set via inline styles */
.pipe-cell { background-size:
        0 0,
        0 0,
        auto; }
.pipe-cell { background-position: center; }
.pipe-cell { background-repeat: no-repeat; }
.pipe-cell[style*="--n: 1"] { background-size: 16px 44px, var(--e-size,0) 0, auto; }
.pipe-cell[style*="--e: 1"] { --e-size: 44px; background-size: 16px 44px, 44px 16px, auto; }
.pipe-cell[style*="--s: 1"] { background-size: 16px 44px, var(--e-size,0) 16px, auto; }
.pipe-cell[style*="--w: 1"] { background-size: 16px 44px, 44px 16px, auto; }

/* Audio Stitch (wave reorder) */
.wave-grid { display:flex; gap:10px; justify-content:center; margin: 16px auto; }
.wave-segment {
    width: 70px; height: 100px; border-radius: 10px; border: 2px solid rgba(0,255,255,0.35);
    background: conic-gradient(from calc(var(--phase,0) * 45deg), rgba(0,255,255,0.2), rgba(148,0,211,0.25), rgba(0,255,255,0.2));
    box-shadow: inset 0 0 18px rgba(0,255,255,0.12);
    cursor: pointer; position: relative; overflow:hidden;
}
.wave-segment::after {
    content:''; position:absolute; inset:0; background:
        repeating-linear-gradient(to top, rgba(255,255,255,0.12) 0 2px, transparent 2px 6px);
    mix-blend-mode: screen; opacity: 0.4;
}
.wave-segment.selected { outline: 2px solid #00ffff; box-shadow: 0 0 14px #00ffff; }
.wave-controls { text-align:center; min-height: 24px; }

/* Input prompt */
.input-prompt { display:flex; gap: 10px; align-items:center; flex-wrap:wrap; }
.input-prompt label { color:#e6faff; font-size: 16px; }
.input-prompt .text-entry { padding:10px 12px; border:1px solid #00ffff; background:rgba(0,0,0,0.4); color:#e6faff; }
.input-error { color:#ff6b6b; margin-left: 8px; }
.shake { animation: shakeAnim 0.4s ease; }

@keyframes shakeAnim {
    0%, 100% { transform: translateX(0); }
    10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
    20%, 40%, 60%, 80% { transform: translateX(5px); }
}

/* Primary and Secondary Button Styles */
.primary-btn, .secondary-btn {
    padding: 12px 28px;
    font-size: 16px;
    font-weight: 600;
    letter-spacing: 1.2px;
    text-transform: uppercase;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.primary-btn {
    background: linear-gradient(135deg, #00ffff 0%, #00aaff 100%);
    color: #000;
    box-shadow: 0 4px 15px rgba(0, 255, 255, 0.4);
}

.primary-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
    transition: left 0.5s ease;
}

.primary-btn:hover::before {
    left: 100%;
}

.primary-btn:hover {
    box-shadow: 0 6px 25px rgba(0, 255, 255, 0.6);
    transform: translateY(-2px);
}

.primary-btn:active {
    transform: translateY(0);
    box-shadow: 0 2px 10px rgba(0, 255, 255, 0.4);
}

.secondary-btn {
    background: linear-gradient(135deg, rgba(138, 43, 226, 0.8) 0%, rgba(88, 28, 135, 0.8) 100%);
    color: #fff;
    border: 2px solid rgba(138, 43, 226, 0.6);
    box-shadow: 0 4px 15px rgba(138, 43, 226, 0.3);
}

.secondary-btn:hover {
    background: linear-gradient(135deg, rgba(138, 43, 226, 1) 0%, rgba(88, 28, 135, 1) 100%);
    box-shadow: 0 6px 25px rgba(138, 43, 226, 0.5);
    transform: translateY(-2px);
}

.secondary-btn:active {
    transform: translateY(0);
    box-shadow: 0 2px 10px rgba(138, 43, 226, 0.3);
}

/* Enhanced Simon Pad Styling */
.simon-pad {
    width: 120px; 
    height: 120px; 
    border-radius: 14px; 
    border: 3px solid rgba(255,255,255,0.3);
    background: color-mix(in srgb, var(--pad-color, #00ffff) 65%, #000 35%);
    box-shadow: 
        0 0 20px rgba(0,0,0,0.5), 
        inset 0 0 12px rgba(255,255,255,0.15),
        0 0 30px color-mix(in srgb, var(--pad-color, #00ffff) 40%, transparent 60%);
    color: #0a0a0a; 
    font-weight: 700; 
    font-size: 24px;
    cursor: pointer; 
    transition: all 0.15s ease;
    text-shadow: 0 0 5px rgba(255,255,255,0.5);
}

.simon-pad:hover {
    transform: scale(1.05);
    border-color: rgba(255,255,255,0.5);
}

.simon-pad.active { 
    filter: brightness(1.8) saturate(1.4); 
    transform: scale(1.08); 
    box-shadow: 
        0 0 40px color-mix(in srgb, var(--pad-color, #00ffff) 80%, transparent 20%),
        inset 0 0 20px rgba(255,255,255,0.3);
}

/* Enhanced Pipe Cell Styling */
.pipe-cell {
    width: 88px; 
    height: 88px; 
    border-radius: 12px; 
    border: 3px solid rgba(0,255,255,0.4);
    background: radial-gradient(100% 100% at 50% 0%, rgba(0,255,255,0.12), rgba(0,0,0,0.7));
    position: relative; 
    cursor: pointer; 
    box-shadow: 
        inset 0 0 25px rgba(0,255,255,0.15),
        0 4px 15px rgba(0,0,0,0.4);
    transition: all 0.2s ease;
}

.pipe-cell:hover {
    border-color: rgba(0,255,255,0.6);
    box-shadow: 
        inset 0 0 30px rgba(0,255,255,0.2),
        0 6px 20px rgba(0,255,255,0.3);
    transform: scale(1.05);
}

/* Enhanced Wave Segment Styling */
.wave-segment {
    width: 70px; 
    height: 100px; 
    border-radius: 12px; 
    border: 3px solid rgba(0,255,255,0.4);
    background: conic-gradient(from calc(var(--phase,0) * 45deg), rgba(0,255,255,0.3), rgba(148,0,211,0.35), rgba(0,255,255,0.3));
    box-shadow: 
        inset 0 0 25px rgba(0,255,255,0.15),
        0 4px 15px rgba(0,0,0,0.4);
    cursor: pointer; 
    position: relative; 
    overflow:hidden;
    transition: all 0.2s ease;
}

.wave-segment:hover {
    transform: scale(1.05);
    border-color: rgba(0,255,255,0.6);
    box-shadow: 
        inset 0 0 30px rgba(0,255,255,0.2),
        0 6px 20px rgba(0,255,255,0.3);
}

.wave-segment.selected { 
    outline: 3px solid #00ffff; 
    outline-offset: 2px;
    box-shadow: 
        0 0 25px #00ffff,
        inset 0 0 30px rgba(0,255,255,0.3);
    transform: scale(1.08);
}
@keyframes shakeAnim { 0%,100%{transform:translateX(0)} 20%{transform:translateX(-5px)} 40%{transform:translateX(5px)} 60%{transform:translateX(-3px)} 80%{transform:translateX(3px)} }

/* Stealth minigame */
.stealth-area { position: relative; width: 480px; max-width: 92vw; margin: 0 auto; padding: 16px; text-align:center; }
.stealth-area .seeker { position: relative; width: 100%; height: 140px; margin-bottom: 12px; background: rgba(0,0,0,0.35); border: 1px solid rgba(0,255,255,0.2); overflow:hidden; }
.stealth-area .seeker::before { content:''; position:absolute; top:0; bottom:0; width: 40%; left: calc(var(--phase, 0) * 100% - 20%); background: linear-gradient(90deg, transparent, rgba(255,0,0,0.18), transparent); filter: blur(4px); }
.stealth-area .cover { width: 100%; height: 10px; background: linear-gradient(90deg, rgba(0,255,255,0.4) 20%, rgba(148,0,211,0.4) 80%); margin-bottom: 12px; }
.stealth-area #stealth-status { min-height: 20px; margin-top: 8px; color: #e6faff; }
/* Generic Overlay for Minigames */
.overlay {
    position: fixed;
    inset: 0;
    z-index: 1000;
    background: rgba(0, 0, 10, 0.92);
    backdrop-filter: blur(8px);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px;
}

.overlay-content {
    background: linear-gradient(135deg, rgba(10, 10, 30, 0.95) 0%, rgba(25, 10, 40, 0.92) 100%);
    border: 3px solid rgba(0, 255, 255, 0.4);
    border-radius: 12px;
    padding: 32px;
    max-width: 90vw;
    max-height: 90vh;
    overflow-y: auto;
    box-shadow: 
        0 0 60px rgba(0, 255, 255, 0.3),
        0 0 120px rgba(138, 43, 226, 0.2),
        inset 0 0 40px rgba(0, 255, 255, 0.05);
    position: relative;
}

.overlay-content h2 {
    color: #00ffff;
    font-size: 28px;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 2px;
    margin-bottom: 16px;
    text-shadow: 0 0 20px rgba(0, 255, 255, 0.6);
}

.overlay-content p {
    color: #e6faff;
    font-size: 18px;
    line-height: 1.6;
    margin-bottom: 12px;
}

.overlay-close {
    position: absolute;
    top: 16px;
    right: 16px;
    background: transparent;
    border: 2px solid rgba(255, 255, 255, 0.3);
    color: #fff;
    font-size: 32px;
    width: 48px;
    height: 48px;
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    line-height: 1;
}

.overlay-close:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: #00ffff;
    color: #00ffff;
    box-shadow: 0 0 20px rgba(0, 255, 255, 0.4);
    transform: scale(1.1);
}

/* Minigame Instructions Styling */
.minigame-container h3 {
    color: #00ffff;
    font-size: 20px;
    margin-bottom: 12px;
    text-transform: uppercase;
    letter-spacing: 1.5px;
}

.minigame-container .instructions {
    color: #e6faff;
    font-size: 16px;
    margin-bottom: 16px;
    padding: 12px;
    background: rgba(0, 255, 255, 0.05);
    border-left: 3px solid #00ffff;
    border-radius: 4px;
}

/* Status Text Styling */
#simon-status, #pipe-status, #stealth-status {
    color: #00ffff;
    font-size: 18px;
    font-weight: 600;
    text-shadow: 0 0 10px rgba(0, 255, 255, 0.6);
    min-height: 28px;
}

/* Glitched Orb and Memory Orb Animations */
.glitched-orb {
    animation: glitchPulse 1.5s ease-in-out infinite;
    filter: hue-rotate(0deg);
}

@keyframes glitchPulse {
    0%, 100% {
        filter: hue-rotate(0deg) brightness(1) saturate(1);
        transform: scale(1);
    }
    25% {
        filter: hue-rotate(45deg) brightness(1.2) saturate(1.5);
        transform: scale(1.05);
    }
    50% {
        filter: hue-rotate(-45deg) brightness(0.9) saturate(0.8);
        transform: scale(0.95);
    }
    75% {
        filter: hue-rotate(90deg) brightness(1.1) saturate(1.3);
        transform: scale(1.03);
    }
}

.memory-orb {
    animation: orbFloat 3s ease-in-out infinite;
    filter: drop-shadow(0 0 15px rgba(0, 255, 255, 0.6));
}

@keyframes orbFloat {
    0%, 100% {
        transform: translateY(0px);
        filter: drop-shadow(0 0 15px rgba(0, 255, 255, 0.6));
    }
    50% {
        transform: translateY(-10px);
        filter: drop-shadow(0 0 25px rgba(0, 255, 255, 0.8));
    }
}

/* Seeker Eye Animation for Stealth */
.seeker-eye {
    animation: seekerScan 2s linear infinite;
}

@keyframes seekerScan {
    0%, 100% {
        filter: brightness(1) drop-shadow(0 0 10px rgba(255, 0, 0, 0.6));
    }
    50% {
        filter: brightness(1.5) drop-shadow(0 0 20px rgba(255, 0, 0, 0.9));
    }
}

/* Text typing effect for dramatic moments */
.typing-text {
    overflow: hidden;
    white-space: nowrap;
    border-right: 2px solid #00ffff;
    animation: typing 2s steps(40, end), blink 0.75s step-end infinite;
}

@keyframes typing {
    from { width: 0; }
    to { width: 100%; }
}

@keyframes blink {
    from, to { border-color: transparent; }
    50% { border-color: #00ffff; }
}

/* Shimmer effect for important UI elements */
.shimmer {
    position: relative;
    overflow: hidden;
}

.shimmer::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    animation: shimmerSlide 3s infinite;
}

@keyframes shimmerSlide {
    0% { left: -100%; }
    100% { left: 100%; }
}

/* Corner accent lines for tech aesthetic */
.tech-corner {
    position: relative;
}

.tech-corner::before,
.tech-corner::after {
    content: '';
    position: absolute;
    width: 30px;
    height: 30px;
    border: 2px solid #00ffff;
}

.tech-corner::before {
    top: 0;
    left: 0;
    border-right: none;
    border-bottom: none;
}

.tech-corner::after {
    bottom: 0;
    right: 0;
    border-left: none;
    border-top: none;
}

/* Responsive adjustments for mobile */
@media (max-width: 768px) {
    #dialogue-view .dialogue-box {
        grid-template-columns: 1fr;
        padding: 16px;
        min-height: 280px;
    }
    
    #dialogue-view .character-portrait {
        display: none;
    }
    
    #dialogue-view .character-name {
        font-size: 22px;
    }
    
    #dialogue-view .dialogue-text {
        font-size: 18px;
    }
    
    .simon-grid {
        grid-template-columns: repeat(2, 100px);
        grid-template-rows: repeat(2, 100px);
        gap: 10px;
    }
    
    .simon-pad {
        width: 100px;
        height: 100px;
        font-size: 20px;
    }
    
    .pipe-grid {
        grid-template-columns: repeat(var(--size), 70px);
        grid-template-rows: repeat(var(--size), 70px);
        gap: 8px;
    }
    
    .pipe-cell {
        width: 70px;
        height: 70px;
    }
    
    .wave-segment {
        width: 55px;
        height: 80px;
    }
}
