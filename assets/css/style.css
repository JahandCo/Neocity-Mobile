/* /assets/style.css */

/* Basic reset and mobile setup */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

html, body {
    width: 100%;
    height: 100%;
    overflow: hidden;
    background-color: #0a0a2a;
    color: #f0f8ff;
    font-family: Arial, sans-serif;
}

/* --- Particle Canvas Background (NEW) --- */
#particle-canvas {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1; /* Sits behind everything */
    background: linear-gradient(135deg, #0f172a 0%, #312e81 100%);
}

#game-screen {
    position: relative;
    width: 100%;
    height: 100%;
}

.game-view {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 1rem;
}

.hidden {
    display: none;
}

/* --- Main Menu View (NEW) --- */
#menu-view {
    /* Containerless look; background styled via menu.css grid effects */
    background: transparent;
}

.menu-container {
    text-align: center;
}

.game-title { display: none; }

.logline { display: none; }

.neon-button {
    /* Style from neocitydev.html */
    background: linear-gradient(90deg, #e811ff, #9333ea);
    color: white;
    font-weight: bold;
    padding: 0.8rem 2rem;
    border-radius: 50px;
    transition: all 0.3s ease;
    border: 2px solid transparent;
    box-shadow: 0 0 10px #e811ff, 0 0 20px #9333ea;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-size: 1rem;
    cursor: pointer;
}

.neon-button:hover {
    transform: translateY(-3px) scale(1.05);
    box-shadow: 0 0 15px #e811ff, 0 0 30px #9333ea;
}


/* --- World View --- */
#world-canvas {
    width: 100%;
    height: 100%;
    background-color: transparent; /* Make it transparent */
}

/* --- Dialogue View --- */
#dialogue-view {
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(0,0,0,0.4);
    backdrop-filter: blur(4px);
}

/* Ensure hidden reliably hides the dialogue overlay despite ID rule specificity */
#dialogue-view.hidden { display: none !important; }

#dialogue-view .dialogue-box {
    width: min(95%, 1100px);
    min-height: 320px;
    background: rgba(10, 10, 30, 0.9);
    border: 2px solid rgba(0,255,255,0.3);
    box-shadow: 0 0 40px rgba(0, 255, 255, 0.2);
    display: grid;
    grid-template-columns: 280px 1fr;
    gap: 24px;
    padding: 24px;
}

#dialogue-view .character-portrait img {
    width: 100%;
    height: auto;
    object-fit: contain;
    filter: drop-shadow(0 4px 14px rgba(0,0,0,0.6));
}

#dialogue-view .dialogue-content {
    display: flex;
    flex-direction: column;
}

#dialogue-view .character-name {
    font-size: 24px;
    color: #00ffff;
    margin-bottom: 8px;
}

#dialogue-view .dialogue-text {
    font-size: 20px;
    line-height: 1.7;
    color: #e6faff;
    min-height: 140px;
}

#dialogue-view .dialogue-choices {
    margin-top: 16px;
    display: flex;
    gap: 12px;
    flex-wrap: wrap;
}

#dialogue-view .dialogue-choices .choice-btn {
    background: transparent;
    border: 2px solid #00ffff;
    color: #00ffff;
    padding: 10px 18px;
    font-size: 16px;
    letter-spacing: 1px;
    cursor: pointer;
    transition: all 0.2s ease;
}

#dialogue-view .dialogue-choices .choice-btn:hover {
    background: #00ffff;
    color: #000;
    box-shadow: 0 0 12px #00ffff;
}

/* Dialogue effects */
#dialogue-view.effect-flash::after {
    content: '';
    position: absolute;
    inset: 0;
    background: rgba(255,255,255,0.7);
    animation: flashFade 0.4s ease;
    pointer-events: none;
}

@keyframes flashFade {
    0% { opacity: 0.9; }
    100% { opacity: 0; }
}

#dialogue-view.effect-glitch .dialogue-box {
    animation: glitchShift 0.8s steps(4, end);
}

@keyframes glitchShift {
    0% { transform: translate(0,0); filter: hue-rotate(0deg); }
    25% { transform: translate(-3px, 1px); filter: hue-rotate(20deg); }
    50% { transform: translate(3px, -2px); filter: hue-rotate(-20deg); }
    75% { transform: translate(-1px, 2px); filter: hue-rotate(10deg); }
    100% { transform: translate(0,0); filter: hue-rotate(0deg); }
}

#dialogue-view.effect-scan::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(to bottom, rgba(0,255,255,0) 0%, rgba(0,255,255,0.12) 50%, rgba(0,255,255,0) 100%);
    background-size: 100% 6px;
    animation: scanlineMove 1.4s linear infinite;
    pointer-events: none;
}

@keyframes scanlineMove {
    0% { background-position-y: 0; }
    100% { background-position-y: 100%; }
}

/* Any generic overlay honoring the hidden class */
.overlay.hidden { display: none !important; }

/* --- Minigames UI --- */
.minigame-container { margin-top: 12px; }
.simon-grid {
    display: grid;
    grid-template-columns: repeat(2, 120px);
    grid-template-rows: repeat(2, 120px);
    gap: 14px;
    justify-content: center;
    margin: 16px auto;
}
.simon-pad {
    width: 120px; height: 120px; border-radius: 14px; border: 2px solid rgba(255,255,255,0.2);
    background: color-mix(in srgb, var(--pad-color, #00ffff) 65%, #000 35%);
    box-shadow: 0 0 14px rgba(0,0,0,0.4), inset 0 0 8px rgba(255,255,255,0.08);
    color: #0a0a0a; font-weight: 700; font-size: 20px;
    cursor: pointer; transition: transform 0.05s ease, filter 0.1s ease;
}
.simon-pad.active { filter: brightness(1.6) saturate(1.2); transform: scale(1.03); }
.simon-controls { display:flex; gap:12px; align-items:center; justify-content:center; }

.pipe-grid {
    --size: 3;
    display: grid; grid-template-columns: repeat(var(--size), 88px); grid-template-rows: repeat(var(--size), 88px);
    gap: 10px; justify-content: center; margin: 16px auto;
}
.pipe-cell {
    width: 88px; height: 88px; border-radius: 10px; border: 2px solid rgba(0,255,255,0.3);
    background: radial-gradient(100% 100% at 50% 0%, rgba(0,255,255,0.08), rgba(0,0,0,0.6));
    position: relative; cursor: pointer; box-shadow: inset 0 0 18px rgba(0,255,255,0.12);
}
.pipe-cell::before, .pipe-cell::after {
    content: '';
    position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%);
    width: 16px; height: 16px; background: #00ffff; border-radius: 4px; box-shadow: 0 0 10px #00ffff;
}
.pipe-cell::before { display: none; }
.pipe-cell::after { display: none; }
/* Draw pipe arms via shadows */
.pipe-cell { --n:0; --e:0; --s:0; --w:0; }
.pipe-cell { box-shadow: inset 0 0 18px rgba(0,255,255,0.12); }
.pipe-cell .arm { display:none; }
/* Use gradients to draw arms visually */
.pipe-cell {
    background:
        linear-gradient(to bottom, transparent calc(50% - 8px), #00ffff calc(50% - 8px), #00ffff calc(50% + 8px), transparent calc(50% + 8px)) center/0 0 no-repeat,
        linear-gradient(to right,  transparent calc(50% - 8px), #00ffff calc(50% - 8px), #00ffff calc(50% + 8px), transparent calc(50% + 8px)) center/0 0 no-repeat,
        radial-gradient(circle at center, rgba(0,255,255,0.9) 0 8px, transparent 9px);
}
/* Expand gradients based on directional flags set via inline styles */
.pipe-cell { background-size:
        0 0,
        0 0,
        auto; }
.pipe-cell { background-position: center; }
.pipe-cell { background-repeat: no-repeat; }
.pipe-cell[style*="--n: 1"] { background-size: 16px 44px, var(--e-size,0) 0, auto; }
.pipe-cell[style*="--e: 1"] { --e-size: 44px; background-size: 16px 44px, 44px 16px, auto; }
.pipe-cell[style*="--s: 1"] { background-size: 16px 44px, var(--e-size,0) 16px, auto; }
.pipe-cell[style*="--w: 1"] { background-size: 16px 44px, 44px 16px, auto; }